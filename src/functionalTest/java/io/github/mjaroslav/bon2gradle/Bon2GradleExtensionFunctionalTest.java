/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.mjaroslav.bon2gradle;

import io.github.mjaroslav.bon2gradle.test.functional.GradleUtils;
import io.github.mjaroslav.bon2gradle.test.shared.IOUtils;
import io.github.mjaroslav.bon2gradle.test.shared.TestConstants;
import lombok.val;
import org.gradle.testkit.runner.GradleRunner;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;

import static org.junit.jupiter.api.Assertions.assertTrue;

class Bon2GradleExtensionFunctionalTest {
    @TempDir
    static File projectDirFile;

    static Path projectDir, buildScript;

    @BeforeAll
    static void beforeAll() {
        projectDir = projectDirFile.toPath();
        buildScript = projectDir.resolve("build.gradle");
    }

    @Test
    void test$deobf() throws IOException {
        val runner = GradleRunner.create();
        runner.withPluginClasspath();
        var script = IOUtils.readStringFromResources(TestConstants.PACKAGE + "Bon2GradleExtensionBuild.gradle");
        script = String.format(script, GradleUtils.getClasspathString(runner));
        IOUtils.writeString(buildScript, script);
        runner.forwardOutput();
        runner.withArguments("dependencies", "--stacktrace");
        runner.withProjectDir(projectDirFile);
        val result = runner.build();
        assertTrue(result.getOutput().contains("BUILD SUCCESS"), "Run not successful");
        assertTrue(result.getOutput().contains("curse.maven:hardcore-ender-expansion-228015:2316923"),
            "Library not resolved");
    }
}
