plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        name 'forge'
        url 'https://maven.minecraftforge.net/'
    }
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

group = 'io.github.mjaroslav'
version = '0.2.0'
archivesBaseName = "Bon2Gradle"

java {
    withSourcesJar()
}

sourceSets {
    sharedTest
    functionalTest
}

tasks.register('functionalTest', Test) {
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    if (Boolean.parseBoolean(System.getenv("CI")))
        dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    useJUnitPlatform()
}

configure([tasks.compileJava, tasks.compileTestJava, tasks.compileFunctionalTestJava, tasks.compileSharedTestJava]) {
    sourceCompatibility = 16 // for the IDE support
    options.release = 8
    javaCompiler = javaToolchains.compilerFor { languageVersion = JavaLanguageVersion.of(16) }
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
    compileOnly("com.anatawa12.forge:ForgeGradle:${project.forgegradle_version}") {
        changing = true
    }
    api "com.github.MJaroslav:BON2:${project.bon2_version}"
    sharedTestImplementation("com.anatawa12.forge:ForgeGradle:${project.forgegradle_version}") {
        changing = true
    }
    sharedTestImplementation "org.junit.jupiter:junit-jupiter:${project.junit_version}"

    compileOnly "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
    sharedTestCompileOnly "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    sharedTestCompileOnly "org.projectlombok:lombok:${project.lombok_version}"
    sharedTestAnnotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:${project.jabel_version}"
    sharedTestAnnotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:${project.jabel_version}"
    testImplementation sourceSets.sharedTest.output
    functionalTestImplementation sourceSets.sharedTest.output
}

configurations.sharedTestImplementation.extendsFrom(configurations.implementation)
// Adds all dependencies from sharedTest to test and functionalTest
configurations.stream().filter(conf -> conf.name.startsWith('sharedTest')).forEach( {
    if (!it.name.endsWith("ForTest")) {
        configurations.getByName('functionalT' + it.name.substring(7)).extendsFrom(it)
        configurations.getByName('t' + it.name.substring(7)).extendsFrom(it)
    }
})

gradlePlugin {
    plugins {
        bon2gradle {
            id = 'bon2gradle'
            implementationClass = 'io.github.mjaroslav.bon2gradle.Bon2GradlePlugin'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
}
